市面上同类的产品服务:
The Oxford Text Checker https://www.oxfordlearnersdictionaries.com/us/oxford_3000_profiler.html

[单词]
Single Words
Part of speech: n., v., adv., adj.
Oxford standard: 3000, 5000; Academic (Written, Spoken)
CEFR level: ABC (A1-2, B1-2, C1-2)

[后续加入Phrases]

[备注]
oxford_level, cefr_level, word, part_of_speech
单词的不同词性可能属于不同的CEFR等级, 比如

[检测结果]
1. 不属于_____的有__个:
2. 属于_____的有__个：点击查看
3. 原文对照（其中红色字体为不属于_____的单词）点击查看

[数据设计方案一]
1. 整理出 Oxford 3000, 5000 数据，包含 word, description, oxford_std, cefr_std，组成json文件
2. 导入到IndexedDB, key为递增, 建立三个索引即: oxford_level, cefr_level, word
3. 如何分词包括去除标点符号的影响
4. 比如要获取cefr_a1的数据, 那么按照index来读取数据, 然后建立一个对象
5. 循环分词来匹配并过程中统计数据并生成输出的结果即红色字体标注"新词"

[数据设计方案二]
1. 整理出 Oxford 3000, 5000 数据，包含 word, part_of_speech, oxford_std, cefr_std，组成json文件
2. 比如要获取cefr_a1的数据, 递归循环根据cefr_a1值创建一个cefr_a1的全局对象每次需要时都先去查看这个是否为null:
    cefr_a1 = {
        "a": null,
        "abandon": null,
        ...
    }
3. 如何分词包括去除标点符号的影响
4. 循环分词来匹配并过程中统计数据并生成输出的结果即红色字体标注"新词"

采用方案二

如何清洗PDF数据
注意：
0) 标题文字要处理
实例：© Oxford University Press...
解决方案：手动 + 自动（正则匹配）

1) 单词后面跟括号表示注释的
实例：bank (money) n 以及 match (contest/correspond) n., v
解决方案：后面的解释说明文字不要了，利用正则来实现。但是，在解决这个问题之前，必须先解决"单词后面的注释文字太长，导致换行"的问题

2) 单词后面的注释文字太长，导致换行
实例：
light (from the sun/a lamp) n.,
 adj
解决方案：

1. 针对形如
light (from the sun/a lamp) n.,
adj. A1, v. A2

① 打开Sublime Text，通过Cmd+F，正则匹配 ^[a-zA-Z0-9-]+ .* 然后 Find All，Cmd+X剪切
② Cmd+Option+F，[\n]{2,} 替换为 \n，可以看到剔除了哪些
③ 新开一个Sublime Text 页面，粘贴

2. 排序，然后通过具比对工，然后肉眼排除

3. 如果不除尽也不会影响，因为字典本身就没有这个单词。（更新：必应也起到了过滤的作用！因为查询这个单词，是没有单词变形的）

总结如下：
[oxford 3000]
a, an indefinite article A1
double adj., det., pron., v. A2,
light (from the sun/a lamp) n.,
like (find sb/sth pleasant) v. A1,
match (contest/correspond) n.,
o’clock adv. A1
outside adv. A1, prep., noun., adj.

[oxford 5000]
没发现。应该不用管了，不是说了吗，必应也是个过滤器呀

3) 单词后面跟数字
实例：close1 v.
解决方案：正则匹配的时候[a-zA-Z-]即只匹配字母和连字符

4) 有连字符的单词
T-shirt
long-term
old-fashioned
full-time
make-up
part-time
short-term
so-called
解决方案：正则匹配 ^([a-zA-Z-])(.*)$ 替换为 "word": "$1", "description": "$2"

5) second在等级A1中算了两次，还紧挨着
实例：
second1 (next after the first) det./
 number
second1 (unit of time) n
解决方案：sublime 去重

6) 单词有大写有小写
解决方案：小写化

7) 一个单词同时属于两个等级
实例：
age n. A1, v. B1，即既属于A1级，又属于B1级
解决方案：通过增加字段来处理

重要：
在合并oxford 3000、oxford 5000、oxford 3000 variant、oxford 5000 variant并修改为json格式时，要先去重

(TODO 导入到WebStorm中会自动检测重复项, 暂未处理)

TODO 添加words to be ignored

TODO 3000或5000的名词的复数形式, 动词的除原型外的四种形式: Past form, Past participle form, s / es/ ies, ‘ing’ form
https://www.worldclasslearning.com/english/five-verb-forms.html

数据上有一个问题，用户选择了5000的话，3000也是要包含的，用户选择了b1，那么a1、a2也要包含呀，看来通过枚举的方式容易出错不优雅，得通过字符组成变量了

导入json数据
1. 利用FileReader, 但是需要用户手动选择文件
2. 利用Ajax但是需要服务器, 不能本地
3. 可以专门用变量呀, https://stackoverflow.com/questions/19706046/how-to-read-an-external-local-json-file-in-javascript

[后续打算加入更多统计结果]
词频统计，基本单词构成多少百分比

操作系统：macOS Mojave 10.14.6
PDF阅读器：Foxit

（非常重要）注：要使用 Foxit，而不要使用 macOS 自带的 PDF preview，因为自带的 PDF preview 出现了不能正确换行的
1. 用Foxit打开The Oxford 3000.pdf
2. 全选，复制，粘贴到Code
3. 预处理掉标题等等
4. 正则替换：^([a-zA-Z-]+)(.*)$ 替换为 $1
5. 小写化

爬取到必应的数据，先保存原始的数据

base form和variant form都放在一起，但是都分好级别

现在不会知道以后需要什么，以后需要什么再来快速处理，这是软件开发的特性！（注：其他领域不要这么来）
暂时之分两个级别，一个是3000，一个是5000

结束语:
因为原数据上有 a, an这样的问题, 所以我怀疑还有其他一些问题要处理。所以, 这个程序当个有力的辅助功能吧

